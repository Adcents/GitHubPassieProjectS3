'use strict';

/* __V3D_TEMPLATE__ - template-based file; delete this line to prevent this file from being updated */

window.addEventListener('load', function() {

var CONTAINER_ID = 'v3d-container';

(function() {

    var params = v3d.AppUtils.getPageParams();

    var PUZZLES_DIR = '/puzzles/';
    var logicURL = params.logic ? params.logic : '__LOGIC__visual_logic.js'.replace('__LOGIC__', '');
    var sceneURL = params.load ? params.load : '__URL__My 3D room app.gltf'.replace('__URL__', '');
    if (!sceneURL) {
        console.log('No scene URL specified');
        return;
    }

    // some puzzles can benefit from cache
    v3d.Cache.enabled = true;

    if (v3d.AppUtils.isXML(logicURL)) {
        var logicURLJS = logicURL.match(/(.*)\.xml$/)[1] + '.js';
        new v3d.PuzzlesLoader().loadEditorWithLogic(PUZZLES_DIR, logicURLJS,
            function() {
                var initOptions = v3d.PL ? v3d.PL.execInitPuzzles({
                        container: CONTAINER_ID }).initOptions
                        : { useFullscreen: true };
                var appInstance = loadScene(sceneURL, initOptions);
                v3d.PE.viewportUseAppInstance(appInstance);
            }
        );
    } else if (v3d.AppUtils.isJS(logicURL)) {
        new v3d.PuzzlesLoader().loadLogic(logicURL, function() {
            var initOptions = v3d.PL ? v3d.PL.execInitPuzzles({
                    container: CONTAINER_ID }).initOptions
                    : { useFullscreen: true };
            loadScene(sceneURL, initOptions);
        });
    } else {
        loadScene(sceneURL, { useFullscreen: true });
    }
})();

function loadScene(sceneURL, initOptions) {

    initOptions = initOptions || {};

    var ctxSettings = {};
    if (initOptions.useBkgTransp) ctxSettings.alpha = true;
    if (initOptions.preserveDrawBuf) ctxSettings.preserveDrawingBuffer = true;

    var preloader = initOptions.useCustomPreloader
            ? createCustomPreloader(initOptions.preloaderProgressCb,
            initOptions.preloaderEndCb)
            : new v3d.SimplePreloader({ container: CONTAINER_ID });

    if (v3d.PE) {
        puzzlesEditorPreparePreloader(preloader);
    }

    var app = new v3d.App(CONTAINER_ID, ctxSettings, preloader);
    if (initOptions.useBkgTransp) {
        app.clearBkgOnLoad = true;
        app.renderer.setClearColor(0x000000, 0);
    }

    // namespace for communicating with code generated by Puzzles
    app.ExternalInterface = {};
    prepareExternalInterface(app);

    if (initOptions.preloaderStartCb) initOptions.preloaderStartCb();
    if (initOptions.useFullscreen) {
        initFullScreen();
    } else {
        var fsButton = document.getElementById('fullscreen_button');
        if (fsButton) fsButton.style.display = 'none';
    }

    sceneURL = initOptions.useCompAssets ? sceneURL + '.xz' : sceneURL;
    app.loadScene(sceneURL, function() {
        app.enableControls();
        app.run();

        if (v3d.PE) v3d.PE.updateAppInstance(app);
        if (v3d.PL) v3d.PL.init(app, initOptions);

        runCode(app);
    }, null, function() {
        console.log('Can\'t load the scene ' + sceneURL);
    });

    return app;
}

function createCustomPreloader(updateCb, finishCb) {
    function CustomPreloader() {
        v3d.Preloader.call(this);
    }

    CustomPreloader.prototype = Object.assign(Object.create(v3d.Preloader.prototype), {
        onUpdate: function(percentage) {
            v3d.Preloader.prototype.onUpdate.call(this, percentage);
            if (updateCb) updateCb(percentage);
        },
        onFinish: function() {
            v3d.Preloader.prototype.onFinish.call(this);
            if (finishCb) finishCb();
        }
    });

    return new CustomPreloader();
}

/**
 * Modify the app's preloader to track the loading process in the Puzzles Editor.
 */
function puzzlesEditorPreparePreloader(preloader) {
    // backward compatibility for loading new projects within the old Puzzles Editor
    if (v3d.PE.loadingUpdateCb !== undefined && v3d.PE.loadingFinishCb !== undefined) {
        var _onUpdate = preloader.onUpdate.bind(preloader);
        preloader.onUpdate = function(percentage) {
            _onUpdate(percentage);
            v3d.PE.loadingUpdateCb(percentage);
        }

        var _onFinish = preloader.onFinish.bind(preloader);
        preloader.onFinish = function() {
            _onFinish();
            v3d.PE.loadingFinishCb();
        }
    }
}

function initFullScreen() {

    var fsButton = document.getElementById('fullscreen_button');
    if (!fsButton) return;

    var container = document.getElementById(CONTAINER_ID);

    if (document.fullscreenEnabled ||
            document.webkitFullscreenEnabled ||
            document.mozFullScreenEnabled ||
            document.msFullscreenEnabled)
        fsButton.style.display = 'inline';

    fsButton.addEventListener('click', function(event) {
        event.stopPropagation();
        if (document.fullscreenElement ||
                document.webkitFullscreenElement ||
                document.mozFullScreenElement ||
                document.msFullscreenElement) {
            exitFullscreen();
        } else
            requestFullscreen(container);
    });

    function changeFullscreen() {
        if (document.fullscreenElement ||
                document.webkitFullscreenElement ||
                document.mozFullScreenElement ||
                document.msFullscreenElement) {
            fsButton.classList.remove('fullscreen-open');
            fsButton.classList.add('fullscreen-close');
        } else {
            fsButton.classList.remove('fullscreen-close');
            fsButton.classList.add('fullscreen-open');
        }
    }

    document.addEventListener('webkitfullscreenchange', changeFullscreen);
    document.addEventListener('mozfullscreenchange', changeFullscreen);
    document.addEventListener('msfullscreenchange', changeFullscreen);
    document.addEventListener('fullscreenchange', changeFullscreen);

    function requestFullscreen(elem) {
        if (elem.requestFullscreen)
            elem.requestFullscreen();
        else if (elem.mozRequestFullScreen)
            elem.mozRequestFullScreen();
        else if (elem.webkitRequestFullscreen)
            elem.webkitRequestFullscreen();
        else if (elem.msRequestFullscreen)
            elem.msRequestFullscreen();
    }

    function exitFullscreen() {
        if (document.exitFullscreen)
            document.exitFullscreen();
        else if (document.mozCancelFullScreen)
            document.mozCancelFullScreen();
        else if (document.webkitExitFullscreen)
            document.webkitExitFullscreen();
        else if (document.msExitFullscreen)
            document.msExitFullscreen();
    }
}

function prepareExternalInterface(app) {
    // register functions in the app.ExternalInterface to call them from Puzzles, e.g:
    // app.ExternalInterface.myJSFunction = function() {
    //     console.log('Hello, World!');
    // }

    app.ExternalInterface.showBank = function() {
        document.querySelector('#bankitems').style.display = "block";
        document.querySelector('#tvmeubelitems').style.display = "none";
        document.querySelector('#tafelstoelenitems').style.display = "none";
        document.querySelector('#keukenitems').style.display = "none";
        document.querySelector('#deuritems').style.display = "none";
        document.querySelector('#muurvloeritems').style.display = "none";
        for (var i = document.querySelectorAll('.categories').length - 1; i >= 0; i--) {
                    document.querySelectorAll('.categories')[i].style.display = "none";
                }
    }

    app.ExternalInterface.showTVmeubel = function() {
        document.querySelector('#bankitems').style.display = "none";
        document.querySelector('#tvmeubelitems').style.display = "block";
        document.querySelector('#tafelstoelenitems').style.display = "none";
        document.querySelector('#keukenitems').style.display = "none";
        document.querySelector('#deuritems').style.display = "none";
        document.querySelector('#muurvloeritems').style.display = "none";
        for (var i = document.querySelectorAll('.categories').length - 1; i >= 0; i--) {
                    document.querySelectorAll('.categories')[i].style.display = "none";
                }
    }

    app.ExternalInterface.showTafel = function() {
        document.querySelector('#bankitems').style.display = "none";
        document.querySelector('#tvmeubelitems').style.display = "none";
        document.querySelector('#tafelstoelenitems').style.display = "block";
        document.querySelector('#keukenitems').style.display = "none";
        document.querySelector('#deuritems').style.display = "none";
        document.querySelector('#muurvloeritems').style.display = "none";
        for (var i = document.querySelectorAll('.categories').length - 1; i >= 0; i--) {
                    document.querySelectorAll('.categories')[i].style.display = "none";
                }
    }

    app.ExternalInterface.showKeuken = function() {
        document.querySelector('#bankitems').style.display = "none";
        document.querySelector('#tvmeubelitems').style.display = "none";
        document.querySelector('#tafelstoelenitems').style.display = "none";
        document.querySelector('#keukenitems').style.display = "block";
        document.querySelector('#deuritems').style.display = "none";
        document.querySelector('#muurvloeritems').style.display = "none";
        for (var i = document.querySelectorAll('.categories').length - 1; i >= 0; i--) {
                    document.querySelectorAll('.categories')[i].style.display = "none";
                }
    }

    app.ExternalInterface.showDeur = function() {
        document.querySelector('#bankitems').style.display = "none";
        document.querySelector('#tvmeubelitems').style.display = "none";
        document.querySelector('#tafelstoelenitems').style.display = "none";
        document.querySelector('#keukenitems').style.display = "none";
        document.querySelector('#deuritems').style.display = "block";
        document.querySelector('#muurvloeritems').style.display = "none";
        for (var i = document.querySelectorAll('.categories').length - 1; i >= 0; i--) {
                    document.querySelectorAll('.categories')[i].style.display = "none";
                }
    }

    app.ExternalInterface.showMuurvloer = function() {
        document.querySelector('#bankitems').style.display = "none";
        document.querySelector('#tvmeubelitems').style.display = "none";
        document.querySelector('#tafelstoelenitems').style.display = "none";
        document.querySelector('#keukenitems').style.display = "none";
        document.querySelector('#deuritems').style.display = "none";
        document.querySelector('#muurvloeritems').style.display = "block";
        for (var i = document.querySelectorAll('.categories').length - 1; i >= 0; i--) {
                    document.querySelectorAll('.categories')[i].style.display = "none";
                }
    }

}

function runCode(app) {
    // add your code here, e.g. console.log('Hello, World!');

    // pak alle catergories
        var categories = document.querySelectorAll(".categories");


    // pak de elementen met de onderstaande ID's
        var bankarea = document.getElementById("bankarea");
        var tvmeubelarea = document.getElementById("tvmeubelarea");
        var tafelstoelenarea = document.getElementById("tafelstoelenarea");
        var keukenarea = document.getElementById("keukenarea");
        var deurarea = document.getElementById("deurarea");
        var muurvloerarea = document.getElementById("muurvloerarea");

      // pak alle elementen met class 'back'
        var back = document.querySelectorAll(".back");

      // click eventlisteners voor bankarea, bij de klik wordt bankitems getoond en de rest gehide.
      // Dit is voor alle onderstaande functies hetzelfde.
        bankarea.addEventListener("click", function(){


            bankitems.style.display = "block";
            for (var i = categories.length - 1; i >= 0; i--) {
                categories[i].style.display = "none";
            }
        });

        tvmeubelarea.addEventListener("click", function(){


            tvmeubelitems.style.display = "block";
            for (var i = categories.length - 1; i >= 0; i--) {
                categories[i].style.display = "none";
            }
        });

        tafelstoelenarea.addEventListener("click", function(){


            tafelstoelenitems.style.display = "block";
            for (var i = categories.length - 1; i >= 0; i--) {
                categories[i].style.display = "none";
            }
        });

        keukenarea.addEventListener("click", function(){


            keukenitems.style.display = "block";
            for (var i = categories.length - 1; i >= 0; i--) {
                categories[i].style.display = "none";
            }
        });

        deurarea.addEventListener("click", function(){


            deuritems.style.display = "block";
            for (var i = categories.length - 1; i >= 0; i--) {
                categories[i].style.display = "none";
            }
        });

        muurvloerarea.addEventListener("click", function(){


            muurvloeritems.style.display = "block";
            for (var i = categories.length - 1; i >= 0; i--) {
                categories[i].style.display = "none";
            }
        });

        // Pakt het eerste element met de class 'back'
        // Hide alle items zodra erop geklikt wordt en toont de categories
        // Dit is voor alle onderstaande functies hetzelfde
        back[0].addEventListener("click", function(){

            bankitems.style.display = "none";
            tvmeubelitems.style.display = "none";
            tafelstoelenitems.style.display = "none";
            keukenitems.style.display = "none";
            deuritems.style.display = "none";
            muurvloeritems.style.display = "none";
            for (var i = categories.length - 1; i >= 0; i--) {
                categories[i].style.display = "block";
            }
        });
        back[1].addEventListener("click", function(){

            bankitems.style.display = "none";
            tvmeubelitems.style.display = "none";
            tafelstoelenitems.style.display = "none";
            keukenitems.style.display = "none";
            deuritems.style.display = "none";
            muurvloeritems.style.display = "none";
            for (var i = categories.length - 1; i >= 0; i--) {
                categories[i].style.display = "block";
            }
        });
        back[2].addEventListener("click", function(){

            bankitems.style.display = "none";
            tvmeubelitems.style.display = "none";
            tafelstoelenitems.style.display = "none";
            keukenitems.style.display = "none";
            deuritems.style.display = "none";
            muurvloeritems.style.display = "none";
            for (var i = categories.length - 1; i >= 0; i--) {
                categories[i].style.display = "block";
            }
        });
        back[3].addEventListener("click", function(){

            bankitems.style.display = "none";
            tvmeubelitems.style.display = "none";
            tafelstoelenitems.style.display = "none";
            keukenitems.style.display = "none";
            deuritems.style.display = "none";
            muurvloeritems.style.display = "none";
            for (var i = categories.length - 1; i >= 0; i--) {
                categories[i].style.display = "block";
            }
        });
        back[4].addEventListener("click", function(){

            bankitems.style.display = "none";
            tvmeubelitems.style.display = "none";
            tafelstoelenitems.style.display = "none";
            keukenitems.style.display = "none";
            deuritems.style.display = "none";
            muurvloeritems.style.display = "none";
            for (var i = categories.length - 1; i >= 0; i--) {
                categories[i].style.display = "block";
            }
        });
        back[5].addEventListener("click", function(){

            bankitems.style.display = "none";
            tvmeubelitems.style.display = "none";
            tafelstoelenitems.style.display = "none";
            keukenitems.style.display = "none";
            deuritems.style.display = "none";
            muurvloeritems.style.display = "none";
            for (var i = categories.length - 1; i >= 0; i--) {
                categories[i].style.display = "block";
            }
        });
}

});
